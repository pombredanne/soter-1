#! /usr/bin/env php
<?php
/**
 * Create and run the Soter security checker console application.
 *
 * @package soter
 */

function ssn_require_once_if_exists( $file ) {
    if ( file_exists( $file ) ) {
        return require_once $file;
    }

    return false;
}

$standalone_autoload = sprintf( '%s/vendor/autoload.php', dirname( __DIR__ ) );
$project_bin_autoload = sprintf( '%s/autoload.php', dirname( __DIR__ ) );
$project_ssn_autoload = sprintf(
    '%s/autoload.php',
    dirname( dirname( dirname( __DIR__ ) ) )
);

if (
    ! ssn_require_once_if_exists( $standalone_autoload ) &&
    ! ssn_require_once_if_exists( $project_bin_autoload ) &&
    ! ssn_require_once_if_exists( $project_ssn_autoload )
) {
    die( 'Unable to find the Composer autoloader.' );
}

$app = new Symfony\Component\Console\Application(
    SSNepenthe\Soter\Config::NAME,
    SSNepenthe\Soter\Config::VERSION
);

$commands = [
    'SSNepenthe\Soter\Console\CacheClearCommand',
    'SSNepenthe\Soter\Console\CheckPluginCommand',
    'SSNepenthe\Soter\Console\CheckProjectCommand',
    'SSNepenthe\Soter\Console\CheckThemeCommand',
    'SSNepenthe\Soter\Console\CheckWordPressCommand',
    'SSNepenthe\Soter\Console\ConfigSetCommand',
    'SSNepenthe\Soter\Console\ConfigRemoveCommand',
    'SSNepenthe\Soter\Console\ConfigResetCommand',
    'SSNepenthe\Soter\Console\ConfigShowCommand',
];

foreach ( $commands as $command ) {
    $app->add( new $command );
}

$app->run();
