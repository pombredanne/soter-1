<?php
/**
 * Package vulnerability object.
 *
 * @package soter
 */

namespace SSNepenthe\Soter\WPVulnDB;

/**
 * This class is a simple wrapper for a vulnerability as reported by WPVulnDB.
 */
class Vulnerability {
	/**
	 * JSON decoded vulnerability.
	 *
	 * @var \stdClass
	 */
	protected $object;

	/**
	 * Constructor
	 *
	 * @param \stdClass $vulnerability JSON decoded vulnerability object.
	 */
	public function __construct( \stdClass $vulnerability ) {
		$this->object = $vulnerability;

		if ( $this->object->created_at ) {
			$this->object->created_at = new \DateTime(
				$this->object->created_at
			);
		}

		if ( $this->object->updated_at ) {
			$this->object->updated_at = new \DateTime(
				$this->object->updated_at
			);
		}

		if ( $this->object->published_date ) {
			$this->object->published_date = new \DateTime(
				$this->object->published_date
			);
		}
	}

	/**
	 * Provides access to vulnerability properties.
	 *
	 * @param  string $key Property name.
	 *
	 * @return mixed
	 */
	public function __get( $key ) {
		if ( isset( $this->object->{$key} ) ) {
			return $this->object->{$key};
		}

		return null;
	}

	/**
	 * Determine whether this vulnerability affects a given version.
	 *
	 * @param  string $version Package version.
	 *
	 * @return bool
	 *
	 * @throws  \InvalidArgumentException When version is not a string.
	 */
	public function affects_version( $version ) {
		if ( ! is_string( $version ) ) {
			throw new \InvalidArgumentException( sprintf(
				'The version parameter is required to be string, was: %s',
				gettype( $version )
			) );
		}

		return is_null( $this->object->fixed_in ) ||
			   version_compare( $version, $this->object->fixed_in, '<' );
	}
}
